
a framework attempts to provide a platform on which application can be built quickly by automating few common tasks and providing a achitecture that we do like to implement.

struts 2 is built over Servlet API.

programatic approach: in this approach,to do a particular task,we write the required program
declrative approach; here we use xml file and java annoataions to do require task.
struts lifecycle:

    1)Request is generated by user and sent to Servlet container.
    2)Servlet container invokes FilterDispatcher filter which in turn determines appropriate action.
    3)One by one Intercetors are applied before calling the Action. Interceptors performs tasks such as Logging, Validation, File Upload, Double-submit guard etc.
    4)Action is executed and the Result is generated by Action.
    5)The output of Action is rendered in the view (JSP, Velocity, etc) and the result is returned to the user.

the default stack rests in strut-default package which we normally extend.default stack is a xml root element that contains commonly used interceptors.

 
struts actions:

In struts 2, action class is POJO (Plain Old Java Object).
POJO means you are not forced to implement any interface or extend any class.
Actions are the core of the Struts2 framework.
the most important role of actions is encapsulating the actual work to be done for a given request.second major role is to assist the framework in determining which result to view to client.
third major role is request data transfer as the data from request can be obtained in action's java beans properties.

by default,action's execute method is run by framework unless we specify some other methos in action's method  attribute in struts.xml as:
<action name="hello" class="org.apache.struts.helloworld.action.HelloWorldAction" method="execute">


struts package:

packages are logical containers into which our actions will be organized by framework.
 
The struts-default package, defined in the system’s struts-default.xml file, declares a huge set of commonly needed Struts 2 components ranging
from complete interceptor stacks to all the common result types.thus by implementing struts-default package instruts.xml, we implement the default interceptor stack

struts actions:
struts 2 action  dont have to implement Action interface to act as action , it can simply implement execute() method.
but implementing it will give us some benefits.

actions are built on a single-thread model.


when a new request is sent for a particular action class,a new object of action class is created to handle the request.

for I18n support by ActionSupport see pg no: 60
The ActionSupport class give you the ability to do :

1. Validation – Declared a validate() method and put the validation code inside.
2. Text localization – Use GetText() method to get the message from resource bundle.

instead of getting field individually , we can get all of them encapsulated in object. see pg no: 61
it can be dangerous as some one can send query string with same name | see pg no: 67

action chaining:

to redirect a action class to other action class,we need to use chaining 
we cannot do like this: <result name="success" >myAction</result>
we must do as : <result name="success" type="chain">gmyAction</result>

the request parameters passed to action is also passed to action which is chained.

chaining is not recommeneded.the alternative is redirect:

redirect is just like sendRedirect in servlets,where a given uri is pasted in address bar of browser.
<action name="gsk" class="sai.Sai" method="execute">
<result name="success" type="redirect">
<param name="location">gs</param>
</result>  
</action>  




